package org.unirender.interaction.automaton;

import it.gp.sockets.remote.orvibo.commons.OrviboSocket;
import it.gp.sockets.remote.orvibo.communication.OrviboCommunication;

public class SimpleAutomaton {

	/**
	 * @param args
	 */
	public static void main(String[] args) throws Exception{
		
		
		EmbeddedAutomaton autom = new EmbeddedAutomaton();
		
		String hotword = autom.getHotWord();
		double thresholdHotword = autom.getThresholdHotword();
		double thresholdWord = autom.getThresholdWord();
		System.out.println("Thresholds: "+thresholdHotword+" ; "+thresholdWord);
		//String address = "192.168.1.35"; //orto
		String address = autom.getPlugAddress(); //studio
//		String address = "192.168.1.183"; //salotto
		
		OrviboSocket socket	= new OrviboSocket(address, 0);
		while (true){
		
			autom.recognizeHotword(hotword, thresholdHotword);
			if (socket.getStatus()== 0)
				autom.say("Periferica spenta. Pronuncia "+hotword+" per accenderla.");
			else
				autom.say("Periferica accesa. Pronuncia "+hotword+" per spegnerla.");
			

			boolean recognized = autom.recognizeOneShot(hotword, thresholdWord);
			if (recognized){
				if (socket.getStatus()== 0)
					autom.say("Accensione");
				else
					autom.say("Spegnimento");
				
				
				OrviboCommunication communication = new OrviboCommunication(socket.getAddress());
				communication.switchStatus();
				socket.setStatus(communication.getStatus());
				System.out.println("status set to "+communication.getStatus());
				
				autom.say("Torno in attesa.");
			}
			else{
				autom.say("Operazione annullata. Torno in attesa.");
			}
		}
		//autom.shutdown();
	}

	
}
